apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: {{ .Release.Name }}
spec:
  {{- if .Values.acme.enabled }}
  acme:
    config:
    - domains:
      - {{ .Values.domain }}
      - "*.{{ .Values.domain }}"
      dns01:
        provider: liatrio-route53
    commonName: {{ .Values.domain }}
  {{- end  }}
  dnsNames:
  - {{ .Values.domain }}
  - "*.{{ .Values.domain }}"
  {{- if .Values.altname }}
  - {{ .Values.altname }}
  {{- end  }}
  issuerRef:
    kind: Issuer
    name: {{ .Values.issuer_name }} 
  secretName: {{ .Release.Name }}-certificate
---
{{- if .Values.waitForCert }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: OnFailure 
      containers:
      - name: post-install-job
        image: bitnami/kubectl:1.15
        command: ["/bin/bash", "-c"]
        args: ["until kubectl get certificate -n toolchain gndn -o jsonpath="{.status.conditions[0].status}" | grep -q 'True' != 0 ; then exit 0; else exit 1; fi"] 
        env:
        - name: SECRETNAME
          value: {{ .Release.Name }}-certificate
{{- end  }}
