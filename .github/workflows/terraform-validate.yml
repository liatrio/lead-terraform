name: "Terraform Validate"

on:
  pull_request:
  push:

jobs:
  terraform_format:
    name: "Terraform Format"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check -recursive

      # Checks that all Terraform configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state. 
      - name: Terraform Validate
        run: terraform init -backend=false && terraform validate

      - name: Run tfsec with reviewdog
        uses: reviewdog/action-tfsec@v1.11.0
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.github_token }}
          fail_on_error: "true"
          filter_mode: "nofilter"
          tfsec_flags: "-e general-secrets-sensitive-in-variable,general-secrets-sensitive-in-local,general-secrets-sensitive-in-attribute"

      - name: Run tflint with reviewdog
        uses: reviewdog/action-tflint@v1.13.0
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.github_token }}
          fail_on_error: "true"
          filter_mode: "nofilter"
