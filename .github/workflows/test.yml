name: "Terraform Test"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:

  test:
    name: Test
    runs-on: [self-hosted, liatrio-lead-terraform]
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout lead-environments
        uses: actions/checkout@v2
        with:
          repository: liatrio/lead-environments
          path: lead-environments
          token: ${{ secrets.LIATRIO_JENKINS_PAT }}
          ref: vcluster-wait

      - name: Checkout lead-terraform
        uses: actions/checkout@v2
        with:
          path: lead-terraform

      - id: cache-paths
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=mod::$(go env GOMODCACHE)"

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-paths.outputs.build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('./lead-terraform/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-paths.outputs.mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('./lead-terraform/go.sum') }}

      - name: Get Branch Name
        id: branch
        uses: tj-actions/branch-names@v5

      - name: Get vcluster Name
        id: vcluster-name
        run: echo "::set-output name=name::${{ steps.branch.outputs.current_branch }}-vcluster"

      - name: Create vcluster
        env:
          VCLUSTER_NAME: ${{ steps.vcluster-name.outputs.name }}
          TERRAGRUNT_IAM_ROLE: ${{ secrets.AWS_LEAD_TERRAFORM_TEST_ROLE }}
        run: terragrunt apply --terragrunt-working-dir ./lead-environments/aws/vcluster -auto-approve

      - name: Run Tests
        env:
          VCLUSTER_NAME: ${{ steps.vcluster-name.outputs.name }}
          TERRAGRUNT_IAM_ROLE: ${{ secrets.AWS_LEAD_TERRAFORM_TEST_ROLE }}
        run: |
          aws sts assume-role --role-arn ${{ secrets.AWS_LEAD_TERRAFORM_TEST_ROLE }} --role-session-name ${{ steps.branch.outputs.current_branch }}-test >> role.json
          export AWS_ACCESS_KEY_ID=$(cat role.json | jq -rc .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(cat role.json | jq -rc .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(cat role.json | jq -rc .Credentials.SessionToken)
          export AWS_REGION=us-east-1

          aws eks update-kubeconfig --name lead --region us-east-1

          terragrunt output --terragrunt-working-dir ./lead-environments/aws/vcluster -json >> outputs.json
          export OIDC_PROVIDER_ARN=$(cat outputs.json | jq -rc .aws_iam_openid_connect_provider_arn.value)
          export OIDC_PROVIDER_URL=$(cat outputs.json | jq -rc .aws_iam_openid_connect_provider_url.value)

          vcluster connect vcluster --namespace $(cat outputs.json | jq -rc .vcluster_namespace.value) --server $(cat outputs.json | jq -rc .vcluster_api_server.value)
          export KUBECONFIG=$(pwd)/kubeconfig.yaml

          cd lead-terraform
          go test -v ./modules/./...

      - name: Destroy vcluster
        if: github.ref == 'refs/heads/master'
        env:
          VCLUSTER_NAME: ${{ steps.vcluster-name.outputs.name }}
          TERRAGRUNT_IAM_ROLE: ${{ secrets.AWS_LEAD_TERRAFORM_TEST_ROLE }}
        run: terragrunt destroy --terragrunt-working-dir ./lead-environments/aws/vcluster -auto-approve
